const JSexample=`
	let rows = prompt("Enter the number of rows: ");
	let columns = prompt("Enter the number of columns: ");

	for (let i = 1; i <= rows; i++) {
	  let row = "";
	  for (let j = 1; j <= columns; j++) {
		row += (i * j) + "\t";
	  }
	  console.log(row);
	}`;const CSSexample=`
	body {
	  background-color: blue;
	}

	h2 {
	  color: grey;
	  text-align: center;
	}

	p {
	  font-family: Sans-serif ;
	  font-size: 30px;
	}
	input{
	  width:50%;
	}
	.hello{
		 color:red;
	}
	#test{
		  color:blue;
	}
	`;const examples={js:JSexample,css:CSSexample,};const selectType=function(){var content=$(this).val();var extension="css";console.log("out");if(content.match(/\b(function|class|const|let|var|for|while|if|else|return|import|export|async|await)\b/)){console.log("1");extension="js"}else if(content.match(/\/\*.*?\*\//g)){console.log("2");extension="css"}
$("#hero input[name=type]").prop("checked",!1);$("#type_"+extension).prop("checked",!0).trigger("change")};const checkType=(e)=>{e.preventDefault();$("#js-convert-btn").prop("disabled",!0);var extension=$("#hero input[name=type]:checked").val();let text=$(".source").val();if(text.trim()==""){showError(empty_popup_heading,empty_popup_text);$("#js-convert-btn").prop("disabled",!1);return}
if(extension){onConvertCallBack()}else{$("#types").addClass("error");showError(type_popup_heading,type_popup_text);$("#js-convert-btn").prop("disabled",!1)}};const onConvertCallBack=()=>{var $form=$("#hero form");$("#js-convert-btn").text("Minifying...").prop("disabled",!0);const formData=$form.serializeArray().reduce((obj,item)=>{obj[item.name]=item.value;return obj},{});const payload={...formData,e_track_key:getETrackKey(),};$.ajaxSetup({headers:{"X-CSRF-TOKEN":$('meta[name="_token"]').attr("content"),},});$.ajax({url:BASE_URL+"ajax/minify",type:"POST",data:payload,dataType:"json",beforeSend:function(){$("#js-convert-btn").text("Processing...").prop("disabled",!0)},success:function(response){if(response.data){$("#source").val(response.data).select();document.execCommand("copy")}
$("#js-convert-btn").text("Minify").prop("disabled",!1)},error:function(jqXHR,textStatus,errorThrown){if(jqXHR.responseJSON.message=="IP Blocked"){showError("Something went wrong","Too Many Requests. Please wait a minute")}else{showError("Something went wrong","An error occurred. Please try again.")}
$("#js-convert-btn").text("Minify").prop("disabled",!1)},complete:function(){showActionBtns();$("#js-convert-btn").prop("disabled",!1)},})};const getSample=()=>{const extension=$("#hero input[name=type]:checked").val();if(extension){$("#source").val(examples[extension])}else{$("#hero input[name=type]:first-child").attr("checked",!0);$("#source").val(examples.js)}
$(".upload-paste-btns").addClass("d-none")};initDragDropUploader({dragDropSelector:"#js-minifier-form",textAreaSelector:"#source",allowedTypes:[".js",".css"],});const fileUpload=(e)=>{const _this=$(e.currentTarget);const file=_this[0].files[0];if(file&&isSupportedFile(file)){const fileSize=file.size;if(bytesToMB(fileSize)>maxFileSize){showError(invalid_size_popup_heading,invalid_size_popup_text);return!1}
const reader=new FileReader();reader.onload=(event)=>{$("#source").val(event.target.result);$("#source").off("input",selectType).on("input",selectType);$("#source").trigger("input")};reader.readAsText(file)}else{showError(invalid_file_type_popup_heading,invalid_file_type_popup_text)}};const isSupportedFile=(file)=>{const allowedExtensions=["js","css"];const extension=file.name.split(".").pop().toLowerCase();return allowedExtensions.includes(extension)};const processUrl=async(url)=>{if(!url){showError(Invalid_URL_popup_heading,Invalid_URL_popup_text);return}
try{$(".url-input").val("");const text=await fetchFromLink(url,"text");let extension="js";if(url.match(/\.css(\?|#|$)/i)){extension="css";console.log("css")}else if(url.match(/\.js(\?|#|$)/i)){extension="js";console.log("js")}else{if(text.match(/\b(function|class|const|let|var|for|while|if|else|return|import|export|async|await)\b/)){extension="js"}else if(text.match(/\/\*.*?\*\//g)){extension="css"}}
$("#source").val(text);$("#source").off("input",selectType).on("input",selectType);$("#source").trigger("input");const $typeInput=$("#type_"+extension);$typeInput.prop("checked",!0).trigger("change");$("#source").on("input",selectType)}catch(error){showError("Something with wrong!",error.message)}};$(document).ready(function(){$(".source").on("input",function(){let text=$(this).val();if(text.trim()===""){$(".js-download").css("display","none");$(".js-copy").css("display","none");$(".js-clear").css("display","none");$(".js-feedback").css("display","none");$(".js-download").prop("disabled",!0)}else{$(".js-download").prop("disabled",!1);$(".js-download").css("display","");$(".js-copy").css("display","");$(".js-clear").css("display","");$(".js-feedback").css("display","")}});$("#source").on("change, keyup",selectType);$("#hero form").on("submit",checkType);$(".js-download").on("click",(e)=>{const extension=$("#hero input[name=type]:checked").val();e.preventDefault();let text=$(".source").val();extension==="js"?downloadAsFile(text,"minified.js"):downloadAsFile(text,"minified.css")});$(".js-file-upload").on("change",function(e){fileUpload(e);$(this).val("")});$(".js-sample").on("click",getSample);document.getElementById("copyButton").addEventListener("click",function(e){e.preventDefault();CopyToClipboard($(".source").val())});$(".url-input").on("input",debounce(function(){const url=$(".url-input").val().trim();processUrl(url)},500));$(".right-icon").on("click",debounce(function(){const url=$(".url-input").val().trim();processUrl(url)},500))})